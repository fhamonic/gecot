import math

stretch_length = [235, 60, 120, 0, 55, 112, 74, 0, 42, 43, 173, 41, 114, 0, 28, 80, 129, 0, 46, 10, 17,
                  36, 0, 38, 57, 0, 64, 210, 0, 80, 80, 0, 134, 36, 160, 175, 240, 205, 190, 0, 50, 0, 108, 0, 100]

arcs = [
    (0, 1, "AUD-Puy_AUD-Car"),
    (1, 0, "AUD-Puy_AUD-Car"),
    (1, 3, ""),
    (3, 1, ""),
    (2, 3, ""),
    (3, 2, ""),
    (3, 4, ""),
    (4, 3, ""),
    (4, 24, "AUD-Car_BRU-Uss"),
    (24, 4, "AUD-Car_BRU-Uss"),
    (5, 7, ""),
    (7, 5, ""),
    (6, 7, ""),
    (7, 6, ""),
    (7, 8, ""),
    (8, 7, ""),
    (8, 9, "QUE-Mas_QUE-Ria"),
    (9, 8, "QUE-Mas_QUE-Ria"),
    (10, 11, "RT-Lau"),
    (11, 10, "RT-Lau"),
    (11, 12, "RT-Lau_QUE-Ria"),
    (12, 11, "RT-Lau_QUE-Ria"),
    (12, 13, ""),
    (13, 12, ""),
    (9, 13, ""),
    (13, 9, ""),
    (13, 14, "QUE-Ria"),
    (14, 13, "QUE-Ria"),
    (15, 17, ""),
    (17, 15, ""),
    (16, 17, ""),
    (17, 16, ""),
    (17, 18, ""),
    (18, 17, ""),
    (18, 19, "BRU-Mij_1"),
    (19, 18, "BRU-Mij_1"),
    (19, 20, "BRU-Mij_2"),
    (20, 19, "BRU-Mij_2"),
    (20, 21, "BRU-Mij_3"),
    (21, 20, "BRU-Mij_3"),
    (21, 22, ""),
    (22, 21, ""),
    (14, 22, ""),
    (22, 14, ""),
    (22, 23, ""),
    (23, 22, ""),
    (23, 25, "BRU-Uss"),
    (25, 23, "BRU-Uss"),
    (24, 25, ""),
    (25, 24, ""),
    (25, 26, ""),
    (26, 25, ""),
    (27, 28, ""),
    (28, 27, ""),
    (26, 28, ""),
    (28, 26, ""),
    (28, 29, "AUD-Far_AUD-Fou"),
    (29, 28, "AUD-Far_AUD-Fou"),
    (30, 31, "AGU-Sou"),
    (31, 30, "AGU-Sou"),
    (29, 31, ""),
    (31, 29, ""),
    (31, 32, ""),
    (32, 31, ""),
    (32, 33, "AUD-Fou_AUD-Ser_1"),
    (33, 32, "AUD-Fou_AUD-Ser_1"),
    (33, 34, "AUD-Fou_AUD-Ser_2"),
    (34, 33, "AUD-Fou_AUD-Ser_2"),
    (36, 39, ""),
    (39, 36, ""),
    (37, 39, ""),
    (39, 37, ""),
    (38, 39, ""),
    (39, 38, ""),
    (39, 40, ""),
    (40, 39, ""),
    (35, 41, ""),
    (41, 35, ""),
    (40, 41, ""),
    (41, 40, ""),
    (41, 42, "AIG-Pou"),
    (42, 41, "AIG-Pou"),
    (34, 43, ""),
    (43, 34, ""),
    (42, 43, ""),
    (43, 42, ""),
    (43, 44, ""),
    (44, 43, "")
]

median = 300
alpha = median / math.log(0.5)

print("arc_id,source_id,target_id,probability")
for s, t, dam in arcs:
    p = math.exp((stretch_length[s]+stretch_length[t])/alpha)
    if len(dam) > 0:
        p = 0
    print("{}_{},{},{},{}".format(s, t, s, t, p))

print("arc_id,dam_id,improve_prob")
for s, t, dam in arcs:
    if len(dam) == 0:
        continue
    p = 0.8 * math.exp((stretch_length[s]+stretch_length[t])/alpha)
    print("{}_{},{},{}".format(s, t, dam, p))
